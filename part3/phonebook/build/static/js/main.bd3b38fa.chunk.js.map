{"version":3,"sources":["services/persons.js","components/Input.js","components/Form.js","components/SinglePerson.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Input","text","value","onChange","Form","props","onSubmit","nameInput","nameChange","numberInput","numberChange","type","SinglePerson","name","number","deletePerson","onClick","Persons","personsToShow","map","person","Notification","className","message","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setNameFilter","NotificationMessage","setNotificationMessage","messageClass","setMessageClass","useEffect","personService","initialContacts","filter","toLowerCase","includes","event","target","preventDefault","contactExists","find","window","confirm","changedContact","returnedContact","contact","setTimeout","catch","error","concat","n","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd3b38fa.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteEntry = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, deleteEntry, update }","import React from 'react'\r\n\r\nconst Input = ( {text, value, onChange} ) => {\r\n    return (\r\n      <div>\r\n        {text} <input \r\n        value={value}\r\n        onChange={onChange}\r\n        />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport Input from './Input'\r\n\r\nconst Form = (props) => {\r\n    return (\r\n      <form onSubmit={props.onSubmit}>\r\n        <Input text={\"name:\"} value={props.nameInput} onChange={props.nameChange}/>\r\n        <Input text={\"number:\"} value={props.numberInput} onChange={props.numberChange}/>\r\n        <button type='submit'>add</button>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nconst SinglePerson = ({ id, name, number, deletePerson }) =>  (\r\n    <div>\r\n        {name} {number}\r\n        <button onClick={() => deletePerson(id, name)}>delete</button>\r\n    </div>\r\n)\r\n\r\nexport default SinglePerson","import React from 'react'\r\nimport SinglePerson from './SinglePerson'\r\n\r\nconst Persons = ( {personsToShow, deletePerson} ) => {\r\n    return (\r\n      <div>\r\n        {personsToShow.map(person => \r\n          <SinglePerson key={person.name} id ={person.id} name={person.name} number={person.number} deletePerson={deletePerson}/>\r\n        )}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ className, message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={className}>\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './index.css'\nimport Input from './components/Input'\nimport Form from './components/Form'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ nameFilter, setNameFilter ] = useState('')\n  const [ NotificationMessage, setNotificationMessage ] = useState(null)\n  const [ messageClass, setMessageClass ] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialContacts => {\n        setPersons(initialContacts)\n      })\n  }, [])\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const contactExists = persons.find( ( {name} ) => name === newName)\n    if (!contactExists) {\n      const nameObject = {\n        name: newName,\n        number: newNumber\n      }\n      personService\n      .create(nameObject)\n      .then(returnedContact => {\n        setPersons(persons.concat(returnedContact))\n        setNewName('')\n        setNewNumber('')\n        setMessageClass('success')\n        setNotificationMessage(`Added ${newName}`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n          setMessageClass('')\n        }, 5000)\n      })\n      .catch(error => {\n        setMessageClass('error')\n        setNotificationMessage(error.response.data.error)\n        setTimeout(() => {\n          setNotificationMessage(null)\n          setMessageClass('')\n        }, 5000)\n      })\n    }\n    else { \n      if (window.confirm(`${newName} is already added to phonebook. Replace the old number with the new?`)) {\n        const changedContact = { ...contactExists, number: newNumber }\n        personService\n        .update(contactExists.id, changedContact)\n        .then(returnedContact => {\n          setPersons(persons.map(contact => contact.id !== contactExists.id ? contact : returnedContact))\n          setNewName('')\n          setNewNumber('')\n          setMessageClass('success')\n          setNotificationMessage(`Updated ${newName}`)\n          setTimeout(() => {\n          setNotificationMessage(null)\n          setMessageClass('')\n        }, 5000)\n        })\n        .catch(error => {\n          setMessageClass('error')\n          setNotificationMessage(error.response.data.error)\n          setTimeout(() => {\n            setNotificationMessage(null)\n            setMessageClass('')\n          }, 5000)\n        })\n      }\n    }\n  }\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Are you sure you want to delete contact ${name}`)) {\n    personService\n      .deleteEntry(id)\n      .then(() =>\n        setPersons(persons.filter(contact => contact.id !== id))\n      )\n      .catch(error => {\n        setPersons(persons.filter(n => n.id !== id))\n        setMessageClass('error')\n        setNotificationMessage(`Information of ${name} has already been deleted from the server!`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n          setMessageClass('')\n        }, 5000)\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNameFilter(event.target.value)\n  }\n\n  const personsToShow = !nameFilter\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(nameFilter.toLowerCase()))\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Notification className={messageClass} message={NotificationMessage} />\n      <Input text=\"filter shown with\" value={nameFilter} onChange={handleFilterChange} />\n      <h3>Add a new</h3>\n      <Form\n        onSubmit={addPerson}\n        nameInput={newName} nameChange={handleNameChange}\n        numberInput={newNumber} numberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons personsToShow={personsToShow} deletePerson={deletePerson} />\n    </>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}